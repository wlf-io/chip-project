{% set MAIN_CHIP = chip %}
    function {{chip.name}}Chip({% for const, value in chip.constants %}_{{const}}{{ loop.last ? '' : ', '}}{% endfor %}){
        //ChipConstants
        {% for const, value in chip.constants %}let C_{{chip.id}}_{{const}} = _{{const}};
        {% endfor %}
        //ChipOutputs
        {% for output in chip.outputs %}let O_{{chip.id}}_{{output}} = null;
        {% endfor %}


        //StandardChipData
        {% for chip in content %}{% if not chip.isCustom %}//Chip: {{chip.rawID}} : {{chip.type}}///////////////////////
        //Inputs
        {% for input in chip.inputs %}let I_{{chip.id}}_{{input}} = null;
        {% endfor %}//Outputs
        {% for output in chip.outputs %}let O_{{chip.id}}_{{output}} = null;
        {% endfor %}//Consts
        {% for const,value in chip.constants %}let C_{{chip.id}}_{{const}} = {{value|json_encode}};
        {% endfor %}//////////////////////////////////////////////////////
        {% endif %}{% endfor %}

        //CustomChips
        {% for chip in content %}{% if chip.isCustom %}//Chip: {{chip.rawID}} : {{chip.type}}///////////////////////
        //Inputs
        {% for input in chip.inputs %}let I_{{chip.id}}_{{input}} = null;
        {% endfor %}//Outputs
        {% for output in chip.outputs %}let O_{{chip.id}}_{{output}} = null;
        {% endfor %}//Consts
        {% for const,value in chip.constants %}const C_{{chip.id}}_{{const}} = {{value|json_encode}};
        {% endfor %}const {{chip.varName}} = new {{chip.name}}Chip({% for const,value in chip.constants %}C_{{chip.id}}_{{const}}{{loop.last ? '' : ', '}}{% endfor %});
        //////////////////////////////////////////////////////
        {% endif %}{% endfor %}

        this.run = ({% for input in chip.inputs %}I_{{chip.id}}_{{input}}{{ loop.last ? '' : ', '}}{% endfor %}) => {
            {% for chip in content %}// Chip : {{chip.rawID}} : {{ chip.type }}
            {% if debug %}try{ {% endif %}{% for con in chip.inputConnections %}{{con.target.output ? "O" : "I"}}_{{con.target.chip}}_{{con.target.name}} = {{con.source.output ? "O" : "I"}}_{{con.source.chip}}_{{con.source.name}};
            {% endfor %}{% if chip.isCustom %}[{% for output in chip.outputs %}O_{{chip.id}}_{{output}}{{loop.last?"":", "}}{% endfor %}] = {{chip.varName}}.run({% for input in chip.inputs %}I_{{chip.id}}_{{input}}{{loop.last?"":", "}}{% endfor %});
            {% else %}{{chip.code}}
            {% endif %}{% if debug %} }catch(e){
                if({{MAIN_CHIP.name}}Chip.isBase){
                    throw {"{{chip.rawID}}":e,data:this.getDebugData()};
                } else {
                    throw {"{{chip.rawID}}":e,custom:{{chip.isCustom|json_encode}}};
                }
            }{% endif %}
            {% endfor %}

            
            {% for con in chip.inputConnections %}{{con.target.output ? "O" : "I"}}_{{con.target.chip}}_{{con.target.name}} = {{con.source.output ? "O" : "I"}}_{{con.source.chip}}_{{con.source.name}};
            {% endfor %}return [{% for output in chip.outputs %}O_{{chip.id}}_{{output}}{{ loop.last ? '' : ', '}}{% endfor %}];
        };

        this.getState = () => {
            return {
                constants: { {% for const,val in chip.constants %}C_{{chip.id}}_{{const}}{{loop.last?"":", "}}{% endfor %} },
                outputs: { {% for output in chip.outputs %}O_{{chip.id}}_{{output}}{{loop.last?"":", "}}{% endfor %} },
                content:{
                    {% for chip in content %}{% if chip.isCustom %}"{{chip.rawID}}": {{chip.varName}}.getState(),
                    {% else %}"{{chip.rawID}}": {
                        constants: { {% for const,val in chip.constants %}C_{{chip.id}}_{{const}}{{loop.last?"":", "}}{% endfor %} },
                        outputs: { {% for output in chip.outputs %}O_{{chip.id}}_{{output}}{{loop.last?"":", "}}{% endfor %} },
                        inputs: { {% for input in chip.inputs %}I_{{chip.id}}_{{input}}{{loop.last?"":", "}}{% endfor %} },
                    },
                {% endif %}{% endfor %}},
            };
        };
        {% if debug %}
        this.getDebugData = () => {
            return {
                content:{
                    {% for chip in content %}{% if chip.isCustom %}"{{chip.rawID}}": {{chip.varName}}.getDebugData(),
                    {% endif %}{% endfor %}
                },
                rawMem: {
                    chip:this.getState(),
                    inputsVars: { {{inputVars|join(", ")}} },
                    outputVars: { {{outputVars|join(", ")}} },
                    constantVars: { {% for constant,value in constantVars %}{{constant}}{{loop.last ? "" : ", "}}{% endfor %} },
                },
            };
        };{% endif %}
    };

    {{chipName}}Chip.isBase = false;
    {{chipName}}Chip.Constants = {{chipConstantsRaw|json_encode}};
    {{chipName}}Chip.Outputs = {{chipOutputsRaw|json_encode}};
    {{chipName}}Chip.Inputs = {{chipInputsRaw|json_encode}};